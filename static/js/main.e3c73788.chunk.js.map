{"version":3,"sources":["helpers/getCurrentTime.ts","components/Clock/Clock.tsx","helpers/getRandomName.ts","App.tsx","index.tsx"],"names":["getNewDate","Date","toUTCString","slice","Clock","state","time","timerId","this","window","setInterval","setState","console","info","prevProps","prevName","name","newName","props","debug","clearInterval","className","React","Component","getRandomName","value","now","toString","App","clockName","hasClock","randomClockNameId","handleContextMenuClick","event","preventDefault","handleClick","document","addEventListener","removeEventListener","ReactDOM","render","getElementById"],"mappings":"6MAAO,SAASA,IACd,OAAO,IAAIC,MAAOC,cAAcC,OAAO,IAAK,G,WCUjCC,EAAb,4MACEC,MAAe,CACbC,KAAMN,KAFV,EAKEO,QAAU,EALZ,uDAOE,WAA2B,IAAD,OACxBC,KAAKD,QAAUE,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAEL,KAAMN,MAEtBY,QAAQC,KAAK,EAAKR,MAAMC,QACvB,OAZP,gCAeE,SAAmBQ,GACjB,IAAcC,EAAaD,EAAnBE,KACMC,EAAYT,KAAKU,MAAvBF,KAEJD,IAAaE,GAEfL,QAAQO,MAAR,uBAA8BJ,EAA9B,eAA6CE,MArBnD,kCAyBE,WACER,OAAOW,cAAcZ,KAAKD,WA1B9B,oBA6BE,WACE,OACE,sBAAKc,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGb,KAAKU,MAAMF,OAGb,YAED,sBAAMK,UAAU,cAAhB,SACGb,KAAKH,MAAMC,cAvCtB,GAA2BgB,IAAMC,WCX1B,SAASC,IACd,IAAMC,EAAQxB,KAAKyB,MAAMC,WAAWxB,OAAO,GAE3C,MAAM,SAAN,OAAgBsB,GCOX,IAAMG,EAAb,4MACEvB,MAAe,CACbwB,UAAW,UACXC,UAAU,GAHd,EAMEC,kBAAoB,EANtB,EAyBEC,uBAAyB,SAACC,GACxBA,EAAMC,iBACN,EAAKvB,SAAS,CAAEmB,UAAU,KA3B9B,EA8BEK,YAAc,SAACF,GACbA,EAAMC,iBACN,EAAKvB,SAAS,CAAEmB,UAAU,KAhC9B,uDAQE,WAA2B,IAAD,OACxBtB,KAAKuB,kBAAoBtB,OAAOC,aAAY,WAC1C,EAAKC,SAAS,CAAEkB,UAAWL,QAC1B,MAEHhB,KAAKG,SAAS,CAAEmB,UAAU,IAE1BM,SAASC,iBAAiB,cAAe7B,KAAKwB,wBAC9CI,SAASC,iBAAiB,QAAS7B,KAAK2B,eAhB5C,kCAmBE,WACE1B,OAAOW,cAAcZ,KAAKuB,mBAC1BK,SAASE,oBAAoB,cAAe9B,KAAKwB,wBACjDI,SAASE,oBAAoB,QAAS9B,KAAK2B,eAtB/C,oBAmCE,WACE,IAAQN,EAAcrB,KAAKH,MAAnBwB,UAER,OACE,sBAAKR,UAAU,MAAf,UACE,6CAECb,KAAKH,MAAMyB,UACV,cAAC,EAAD,CAAOd,KAAMa,WA3CvB,GAAyBP,IAAMC,WCP/BgB,IAASC,OACP,cAAC,EAAD,IACAJ,SAASK,eAAe,W","file":"static/js/main.e3c73788.chunk.js","sourcesContent":["export function getNewDate() {\n  return new Date().toUTCString().slice(-12, -4);\n}\n","import React from 'react';\nimport { getNewDate } from '../../helpers/getCurrentTime';\n\ntype Props = {\n  name: string,\n};\n\ntype State = {\n  time: string,\n};\n\nexport class Clock extends React.Component<Props, State> {\n  state: State = {\n    time: getNewDate(),\n  };\n\n  timerId = 0;\n\n  componentDidMount(): void {\n    this.timerId = window.setInterval(() => {\n      this.setState({ time: getNewDate() });\n      // eslint-disable-next-line no-console\n      console.info(this.state.time);\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Readonly<Props>): void {\n    const { name: prevName } = prevProps;\n    const { name: newName } = this.props;\n\n    if (prevName !== newName) {\n      // eslint-disable-next-line no-console\n      console.debug(`Renamed from ${prevName} to ${newName}`);\n    }\n  }\n\n  componentWillUnmount(): void {\n    window.clearInterval(this.timerId);\n  }\n\n  render() {\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {this.props.name}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {this.state.time}\n        </span>\n      </div>\n    );\n  }\n}\n","export function getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './components/Clock/Clock';\nimport { getRandomName } from './helpers/getRandomName';\n\ntype State = {\n  clockName: string,\n  hasClock: boolean,\n};\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    clockName: 'Clock-0',\n    hasClock: false,\n  };\n\n  randomClockNameId = 0;\n\n  componentDidMount(): void {\n    this.randomClockNameId = window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n\n    this.setState({ hasClock: true });\n\n    document.addEventListener('contextmenu', this.handleContextMenuClick);\n    document.addEventListener('click', this.handleClick);\n  }\n\n  componentWillUnmount(): void {\n    window.clearInterval(this.randomClockNameId);\n    document.removeEventListener('contextmenu', this.handleContextMenuClick);\n    document.removeEventListener('click', this.handleClick);\n  }\n\n  handleContextMenuClick = (event: MouseEvent) => {\n    event.preventDefault();\n    this.setState({ hasClock: false });\n  };\n\n  handleClick = (event: MouseEvent) => {\n    event.preventDefault();\n    this.setState({ hasClock: true });\n  };\n\n  render() {\n    const { clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        {this.state.hasClock && (\n          <Clock name={clockName} />\n        )}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}